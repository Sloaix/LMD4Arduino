#include <Arduino.h>
#include <TimerOne.h>
#include <SPI.h>
#include <Hub08Driver.h>

byte eyupa1[] = {
    B00000000, B00000000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00001111, B11111111, B11110000, B11000000, B00001100,
    B00000000, B00000000, B00000000, B00001111, B11111111, B11110000, B11000000, B00001100,
    B00000000, B00000000, B00001111, B11111000, B00000000, B00000011, B00111111, B11110011,
    B00000000, B00000000, B00001111, B11111000, B00000000, B00000011, B00111111, B11110011,
    B00000000, B00000111, B11110000, B00000000, B00000000, B01100000, B00000000, B00000011,
    B00000000, B00000111, B11110000, B00000000, B00000000, B01100000, B00000000, B00000011,
    B00001111, B11111000, B00000000, B00000000, B00000000, B00011001, B10011001, B10011011,
    B00001111, B11111000, B00000000, B00000000, B00000000, B00011001, B10011001, B10011011,
    B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110,
    B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110,
    B11111111, B11111111, B11111110, B00111111, B11111000, B01111111, B11111111, B11111000,
    B11111111, B11111111, B11111110, B00111111, B11111000, B01111111, B11111111, B11111000,
    B00000000, B00000000, B00000011, B11100011, B11000111, B11000111, B10000000, B00000000,
    B00000000, B00000000, B00000011, B11000001, B11000111, B10000011, B10000000, B00000000};

byte eyupa2[] = {
    B00000000, B00000000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00000000, B00000000, B00001111, B00000000, B00000000,
    B00000000, B00000000, B00000000, B00001111, B11111111, B11110000, B11000000, B00001100,
    B00000000, B00000000, B00000000, B00001111, B11111111, B11110000, B11000000, B00001100,
    B00000000, B00000000, B00001111, B11111000, B00000000, B00000011, B00111111, B11110011,
    B00000000, B00000000, B00001111, B11111000, B00000000, B00000011, B00111111, B11110011,
    B00000000, B00000111, B11110000, B00000000, B00000000, B01100000, B00000000, B00000011,
    B00000000, B00000111, B11110000, B00000000, B00000000, B01100000, B00000000, B00000011,
    B00001111, B11111000, B00000000, B00000000, B00000000, B00011001, B10011001, B10011011,
    B00001111, B11111000, B00000000, B00000000, B00000000, B00011001, B10011001, B10011011,
    B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110,
    B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000110,
    B11111111, B11111111, B11111110, B00111111, B11111000, B01111111, B11111111, B11111000,
    B11111111, B11111111, B11111110, B00111111, B11111000, B01111111, B11111111, B11111000,
    B00000000, B00000000, B00000011, B11100011, B11000111, B11000111, B10000000, B00000000,
    B00000000, B00000000, B00000001, B11100011, B10000011, B11000111, B00000000, B00000000};
Hub08Driver *driver;
BufferCanvas *canvas;

void setup()
{
    Serial.begin(115200);

    driver = new Hub08Driver(8, 3, 4, 5, 6, 7, 8);

    Timer1.initialize(200);
    Timer1.attachInterrupt(timeHandler);

    canvas = driver->getCanvas();

    driver->draw(eyupa1);
}

void loop()
{
    canvas->shiftRight(1, true);
    delay(20);
}

void timeHandler()
{
    driver->scanLine();
}
